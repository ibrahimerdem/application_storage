# -*- coding: utf-8 -*-
"""data_transform.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mgIvyBhul97mmt4oahU3X89Z-UQ4AbHE
"""

import numpy as np
import pandas as pd

from datetime import datetime
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings("ignore")

from google.colab import files
model_data = files.upload()

model_data = pd.read_csv("model_data_t1.csv")

model_df = model_data.copy()
model_df["t_date"] = model_df["t_date"].astype("datetime64")
model_df["c_since"] = model_df["c_since"].astype("datetime64")

END_DATE = "2018-07-01"

def pipe1(df):
    df = df.copy()
    df.loc[df["price"]==0, "price"] = 1
    df["payment"] = df["price"]*df["amount"]
    df.drop(columns=["amount"], inplace=True)
    df["month"] = df["t_date"].dt.month
    df["month"] = df["month"].astype("int64")
    df["dayofweek"] = df["t_date"].dt.dayofweek
    df["dayofweek"] = df["dayofweek"].astype("int64") + 1
    #df["recency"] = df["t_date"].max() - df["t_date"]
    df["recency"] = datetime.strptime(END_DATE, "%Y-%m-%d") - df["t_date"]
    df["recency"] = df["recency"].dt.days + 1
    df["c_since"] = df["t_date"].max() - df["c_since"]
    df["c_since"] = df["c_since"].dt.days + 1
    return df

def pipe2(df):
    df["recency"] = pd.cut(df[df["recency"]>0]["recency"],
                        bins=100,
                        labels=list(range(1,101)))
    df["c_since"] = pd.cut(df[df["c_since"]>0]["c_since"],
                        bins=100,
                        labels=list(range(1,101)))
    df["payment"] = pd.cut(df["payment"],
                        bins=1000,
                        labels=list(range(1,1001)))
    df["price"] = pd.cut(df["price"],
                        bins=500,
                        labels=list(range(1,501)))
    return df

TEST_SIZE = 0.1

cust_base = model_df["c_id"].unique()
random_selection = np.random.rand(len(cust_base)) <= TEST_SIZE
test_cust = cust_base[random_selection]
test_df = model_df[model_df["c_id"].isin(test_cust)]
model_df = model_df[~(model_df["c_id"].isin(test_cust))]

model_df = pipe1(model_df)
model_df = pipe2(model_df)

test_df = pipe1(test_df)
test_df = pipe2(test_df)

model_df.to_csv("transformed_model_data_t1.csv", index=None)
test_df.to_csv("transformed_test_data_t1.csv", index=None)

graph = model_df["c_id"].value_counts()

plt.figure(figsize=(20,10))
sns.distplot(graph[graph<100], hist=True, kde=False, 
             bins=100, color = "red",
             hist_kws={'edgecolor':'black'})

plt.title("Histogram of Customer Purchase")
plt.xlabel("Number of Purchase")
plt.ylabel("Number of Customers")
plt.show()

graph = model_df["item_id"].value_counts()

plt.figure(figsize=(20,10))
sns.distplot(graph[graph<100], hist=True, kde=False, 
             bins=100, color = "red",
             hist_kws={'edgecolor':'black'})

plt.title("Histogram of Product Occurence")
plt.xlabel("Number of Occurence")
plt.ylabel("Number of Products")
plt.show()

plt.figure(figsize=(20,10))
sns.distplot(model_df["category"], hist=True, kde=False, color = "blue",
             hist_kws={'edgecolor':'black'}, vertical=True)

plt.title("Transactions Frequency of Category")
plt.xlabel("Category ID")
plt.ylabel("Number of Transactions")
plt.show()

plt.figure(figsize=(20,10))
sns.distplot(model_df["month"], hist=True, kde=False, color = "blue",
             hist_kws={'edgecolor':'black'}, vertical=True)

plt.title("Transactions Frequency of Month")
plt.xlabel("Number of Transactions")
plt.ylabel("Month")
plt.show()

plt.figure(figsize=(20,10))
sns.distplot(model_df["dayofweek"], hist=True, kde=False, color = "blue",
             hist_kws={'edgecolor':'black'}, vertical=True)

plt.title("Transactions Frequency of DayofWeek")
plt.xlabel("Number of Transactions")
plt.ylabel("DayofWeek")
plt.show()

plt.figure(figsize=(20,10))
sns.distplot(model_df["recency"], hist=True, kde=False, 
             bins=100, color = "red",
             hist_kws={'edgecolor':'black'})

plt.title("Histogram of Recency")
plt.xlabel("Recency(0-100)")
plt.ylabel("Number of Transactions")
plt.show()

plt.figure(figsize=(20,10))
sns.distplot(model_df["payment"], hist=True, kde=False, 
             bins=100, color = "red",
             hist_kws={'edgecolor':'black'})

plt.title("Histogram of Payment")
plt.xlabel("Payment(0-1000)")
plt.ylabel("Number of Transactions")
plt.show()

plt.figure(figsize=(20,10))
sns.distplot(model_df["price"], hist=True, kde=False, 
             bins=100, color = "red",
             hist_kws={'edgecolor':'black'})

plt.title("Histogram of Price")
plt.xlabel("Price(0-500)")
plt.ylabel("Number of Transactions")
plt.show()